{"version":3,"sources":["webpack://@raafirivero/mason/webpack/bootstrap","webpack://@raafirivero/mason/./forum.js","webpack://@raafirivero/mason/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@raafirivero/mason/./src/forum/addComposerFields.js","webpack://@raafirivero/mason/./src/forum/addFieldUpdateControl.js","webpack://@raafirivero/mason/./src/forum/addFieldsOnDiscussionHero.js","webpack://@raafirivero/mason/./src/forum/addFieldsOnDiscussionPost.js","webpack://@raafirivero/mason/./src/forum/components/ByTagsComposer.js","webpack://@raafirivero/mason/./src/forum/components/FieldEditDropdown.js","webpack://@raafirivero/mason/./src/forum/components/FieldEditTags.js","webpack://@raafirivero/mason/./src/forum/components/FieldEditText.js","webpack://@raafirivero/mason/./src/forum/components/FieldGrid.js","webpack://@raafirivero/mason/./src/forum/components/FieldsEditor.js","webpack://@raafirivero/mason/./src/forum/components/FieldsEditorByTags.js","webpack://@raafirivero/mason/./src/forum/components/FieldsEditorModal.js","webpack://@raafirivero/mason/./src/forum/components/FieldsViewer.js","webpack://@raafirivero/mason/./src/forum/helpers/chunkArray.js","webpack://@raafirivero/mason/./src/forum/index.js","webpack://@raafirivero/mason/./src/forum/patchModelIdentifier.js","webpack://@raafirivero/mason/./src/lib/helpers/sortByAttribute.js","webpack://@raafirivero/mason/./src/lib/models/Answer.js","webpack://@raafirivero/mason/./src/lib/models/ByTag.js","webpack://@raafirivero/mason/./src/lib/models/Field.js","webpack://@raafirivero/mason/external \"flarum.core.compat['Component']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['Model']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['app']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['components/Button']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['components/CommentPost']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['components/Composer']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['components/Modal']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['extend']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['helpers/icon']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['models/Discussion']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['models/Forum']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['tags/components/TagDiscussionModal']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['tags/utils/sortTags']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['utils/ItemList']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['utils/computed']\"","webpack://@raafirivero/mason/external \"flarum.core.compat['utils/mixin']\""],"names":["DiscussionComposer","prototype","raafiriveroMasonAnswers","byTagEnabled","app","data","resources","attributes","ByTagsUnit","ByTagsComposer","dTag","extend","TagDiscussionModal","e","selected","name","Composer","items","forum","canFillRaafiRiveroMasonFields","matchingTags","matchTags","myFields","i","length","tagName","fields","add","FieldsEditorByTags","component","bytags","answers","onchange","FieldsEditor","ontagchange","tags","relationships","DiscussionControls","discussion","canUpdateRaafiRiveroMasonAnswers","Button","children","translator","trans","icon","onclick","modal","show","FieldsEditorModal","DiscussionHero","props","canSeeRaafiRiveroMasonAnswers","attribute","FieldsViewer","override","original","position","$composer","$","stop","composerHeight","outerHeight","m","redraw","headerHeight","PositionEnum","NORMAL","height","updateHeight","showFieldsOnPost","post","number","CommentPost","subtree","check","map","answer","id","join","content","postHeaderIndex","findIndex","item","attrs","className","splice","init","store","all","tagsList","tempStorage","usedList","tagsObj","filter","match","tag_name","forEach","push","JSON","parse","allowed_field","Component","FieldEditDropdown","field","view","selectedAnswerIdsForThisField","suggested_answers","answerIndex","a","multiple","event","target","options","option","value","answerId","getById","disabled","required","hidden","placeholderHidden","selectPlaceholder","sortByAttribute","indexOf","text","DiscussionFields","selectedTags","tag","canAddToDiscussion","canStartDiscussion","minPrimary","maxPrimary","minSecondary","maxSecondary","isPrimary","sortTags","currentSelectedChild","sort","parent","fieldRequired","fieldLabel","withAttr","find","FieldEditText","answersForThisField","oninput","createRecord","Model","getIdentifier","placeholder","fieldPlaceholder","FieldGrid","chunkArray","row","answerToFieldIndex","onsubmit","preventDefault","headItems","toArray","fieldItems","updateSelection","fieldAnswers","reverseFieldLookup","concat","ItemList","FieldEditTags","inputAttrs","input","user_values_allowed","description","smallList","tagslist","j","allFields","dirty","processing","title","answersChanged","bind","loading","saveAnswers","save","then","close","err","Modal","head","fieldsItems","answer_list","show_when_empty","itemsPerChunk","R","slice","initializers","models","Field","Answer","ByTag","Discussion","hasMany","Forum","addComposerFields","addFieldsOnDiscussionHero","addFieldsOnDiscussionPost","addFieldUpdateControl","patchModelIdentifier","model","exists","type","attr","b","apiEndpoint","mixin","is_suggested","hasOne","tag_id","min_answers_count","max_answers_count","validation","deleted_at","transformDate","all_answers","computed"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from './src/forum';\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\nimport Composer from 'flarum/components/Composer';\nimport FieldsEditor from './components/FieldsEditor';\nimport FieldsEditorByTags from './components/FieldsEditorByTags';\nimport ByTagsComposer from './components/ByTagsComposer';\nimport TagDiscussionModal from 'flarum/tags/components/TagDiscussionModal';\n\n\nexport default function () {\n    DiscussionComposer.prototype.raafiriveroMasonAnswers = [];\n    let byTagEnabled = app.data.resources[0].attributes['raafirivero.mason.by-tag'];\n    let ByTagsUnit = new ByTagsComposer;\n    let dTag = '';\n    // let fieldsByTags = new FieldsEditorByTags;\n\n    extend(TagDiscussionModal.prototype, 'onsubmit', function(e) {\n        // get name of the tag selected in the modal\n\n        if (this.selected == false) {\n            // send a command to empty the field here\n            dTag = '';\n            return;\n        }\n\n        dTag = this.selected[0].data.attributes.name;\n    })\n\n    extend(Composer.prototype, 'hide', function(e) {\n        // remove the the fields from the headerItems...\n    })\n\n\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\n        if (!app.forum.canFillRaafiRiveroMasonFields()) {\n            return;\n        }\n\n        // so this list contains whether a tag has fields!\n        const matchingTags = ByTagsUnit.matchTags();\n\n        if(byTagEnabled) {\n            // fields selectively show up on byTag posts\n            let myFields = [];\n            //console.log(dTag);\n\n            for (let i = 0; i < matchingTags.length; i++) {\n                if (matchingTags[i].tagName == dTag) {\n                    myFields = matchingTags[i].fields;\n                } \n            }      \n            // myFields is a list of only fields that match the selected tag\n\n            //if(myFields[0]) {\n\n                items.add('raafirivero-mason-fields', FieldsEditorByTags.component({\n                        bytags: myFields,\n                        answers: this.raafiriveroMasonAnswers,\n                        onchange: answers => {\n                            this.raafiriveroMasonAnswers = answers;\n                        },\n                    }));\n\n            // }\n\n\n            \n            // this.matchingTag = tempStorage.filter(match => match.data.attributes.tag_name == this.tag);\n\n        } else {\n            // show the fields on every post. (the original setup for the plugin)\n\n            items.add('raafirivero-mason-fields', FieldsEditor.component({\n                answers: this.raafiriveroMasonAnswers,\n                onchange: answers => {\n                    this.raafiriveroMasonAnswers = answers;\n                },\n                ontagchange: tags => {\n                    this.tags = tags;\n                },\n            }));\n\n\n\n        }\n    });\n\n    extend(DiscussionComposer.prototype, 'data', function (data) {\n        if (!app.forum.canFillRaafiRiveroMasonFields()) {\n            return;\n        }\n        \n        // may need a filter here - probably not for this plugin but for\n        // the Front-End extension that consumes it.\n        // console.log(\"data function:\");\n        // console.log(data);\n\n        data.relationships = data.relationships || {};\n        data.relationships.raafiriveroMasonAnswers = this.raafiriveroMasonAnswers;\n    });\n}\n","import {extend} from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport Button from 'flarum/components/Button';\nimport FieldsEditorModal from './components/FieldsEditorModal';\n\nexport default function () {\n    extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n        if (discussion.canUpdateRaafiRiveroMasonAnswers()) {\n            items.add('raafirivero-mason-update-answers', Button.component({\n                children: app.translator.trans('raafirivero-mason.forum.discussion-controls.edit-answers'),\n                icon: 'fas fa-tag',\n                onclick: () => app.modal.show(new FieldsEditorModal({discussion})),\n            }));\n        }\n    });\n}\n","import {extend, override} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionHero from 'flarum/components/DiscussionHero';\nimport Composer from 'flarum/components/Composer';\nimport FieldsViewer from './components/FieldsViewer';\n\nexport default function () {\n    extend(DiscussionHero.prototype, 'items', function (items) {\n        if (!this.props.discussion.canSeeRaafiRiveroMasonAnswers() || !app.forum.attribute('raafirivero.mason.fields-in-hero')) {\n            return;\n        }\n\n        items.add('raafirivero-mason-fields', FieldsViewer.component({\n            discussion: this.props.discussion,\n        }));\n    });\n\n    override(Composer.prototype, 'animateToPosition', function (original, position) {\n        // we need to detect if there are any mason fields present and if there are\n        // add their height to the default height of the composer window\n        const $composer = this.$().stop(true);\n        const composerHeight = $composer.outerHeight();\n        m.redraw(true);\n        $composer.show();\n\n        //const $composer = this.$();\n        const headerHeight = this.$('.ComposerBody-header').outerHeight();\n\n        if (position === Composer.PositionEnum.NORMAL && composerHeight < headerHeight) {\n            this.height = headerHeight + composerHeight;\n            this.updateHeight();\n        }\n\n        return original(position);\n    });\n\n    // extend(Composer.prototype, 'maximumHeight', function () {\n    //     //console.log('4');\n    //     return 800;\n    // });\n}","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport CommentPost from 'flarum/components/CommentPost';\nimport FieldsViewer from './components/FieldsViewer';\n\nfunction showFieldsOnPost(post) {\n    // We only add fields to the first post, and only if fields are not displayed in the hero\n    // TODO: what if the first post is deleted ?\n    return post.number() === 1 && !app.forum.attribute('raafirivero.mason.fields-in-hero');\n}\n\nexport default function () {\n    extend(CommentPost.prototype, 'init', function () {\n        if (!this.props.post.discussion().canSeeRaafiRiveroMasonAnswers() || !showFieldsOnPost(this.props.post)) {\n            return;\n        }\n\n        this.subtree.check(() => {\n            // Create a string with all answer ids\n            // If answers change this string will be different\n            return this.props.post.discussion().raafiriveroMasonAnswers().map(answer => answer.id()).join(',');\n        });\n    });\n\n    extend(CommentPost.prototype, 'content', function (content) {\n        if (!this.props.post.discussion().canSeeRaafiRiveroMasonAnswers() || !showFieldsOnPost(this.props.post)) {\n            return;\n        }\n\n        const postHeaderIndex = content.findIndex(item => item.attrs && item.attrs.className === 'Post-header');\n\n        // Insert the new content just after the header\n        // or at the very beginning if the header is not found\n        content.splice(postHeaderIndex === -1 ? 0 : postHeaderIndex + 1, 0, FieldsViewer.component({\n            discussion: this.props.post.discussion(),\n        }));\n    });\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\n\nexport default class ByTagsComposer extends Component {\n\n    init() {\n        // app.store;\n        // guess I didn't need this part\n    }\n\n    matchTags() {\n        // build an array of Tags with the fields that match them\n\n        const tags = app.store.all('tags');\n        let tagsList = [];\n        \n        \n        let tempStorage = app.store.all('raafirivero-mason-bytag');\n        var usedList = [];\n\n        for ( let i = 0; i < tags.length; i++){   \n            let fields = [];\n            var tagName = tags[i].data.attributes.name;\n            let tagsObj = {};\n\n            usedList = tempStorage.filter(match => match.data.attributes.tag_name == tagName && match.data.attributes.switch == true);\n\n            // It may be better to create an object with all the Tags represented\n            // even if they have no fields enabled. Turn this conditional back off if so.\n            if (usedList[0]) {\n\n                usedList.forEach(function(e){\n                    fields.push(JSON.parse(e.data.attributes.allowed_field));\n                });\n\n                tagsObj = {tagName,fields};\n                tagsList.push(tagsObj);\n            }\n        }\n\n        return tagsList;        \n    }\n\n}","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\n\nexport default class FieldEditDropdown extends Component {\n    init() {\n        this.field = this.props.field;\n        this.answers = this.props.answers;\n        this.onchange = this.props.onchange;\n    }\n\n    view() {\n        let selectedAnswerIdsForThisField = [];\n\n        this.field.suggested_answers().forEach(answer => {\n            const answerIndex = this.answers.findIndex(a => {\n                // Temporary store entries seem to turn into undefined after saving\n                if (typeof a === 'undefined') {\n                    return false;\n                }\n\n                return a.id() === answer.id();\n            });\n\n            if (answerIndex !== -1) {\n                selectedAnswerIdsForThisField.push(answer.id());\n            }\n        });\n\n        return m('span.Select', [\n            m('select.Select-input.FormControl', {\n                multiple: this.field.multiple(),\n                onchange: event => {\n                    let answers = [];\n\n                    for (let option of event.target.options) {\n                        if (option.selected && option.value !== 'none') {\n                            const answerId = option.value;\n\n                            // This will only work with suggested answers for now\n                            // As they are the only ones registered in the store\n                            answers.push(app.store.getById('raafirivero-mason-answer', answerId));\n                        }\n                    }\n\n                    this.onchange(answers);\n                },\n            }, [\n                (this.field.multiple() ? null : m('option', {\n                    value: 'none',\n                    selected: selectedAnswerIdsForThisField.length === 0,\n                    disabled: this.field.required(),\n                    hidden: this.placeholderHidden(),\n                }, this.selectPlaceholder())),\n                sortByAttribute(this.field.suggested_answers()).map(\n                    answer => m('option', {\n                        value: answer.id(),\n                        selected: selectedAnswerIdsForThisField.indexOf(answer.id()) !== -1,\n                    }, answer.content())\n                ),\n            ]),\n            icon('fas fa-caret-down', {className: 'Select-caret'}),\n        ]);\n    }\n\n    placeholderHidden() {\n        // If labels are hidden, we need to always show the default value (even if it can't be selected)\n        // Otherwise when the field is \"required\" you can't find the name of the field anymore once something is selected\n        if (app.forum.attribute('raafirivero.mason.labels-as-placeholders')) {\n            return false;\n        }\n\n        return this.field.required();\n    }\n\n    selectPlaceholder() {\n        let text = '';\n\n        if (app.forum.attribute('raafirivero.mason.labels-as-placeholders')) {\n            text += this.field.name();\n\n            if (this.field.required()) {\n                text+= ' *';\n            }\n\n            text += ' - ';\n        }\n\n        if (this.field.required()) {\n            text += app.translator.trans('raafirivero-mason.forum.answers.choose-option');\n        } else {\n            text += app.translator.trans('raafirivero-mason.forum.answers.no-option-selected');\n        }\n\n        return text;\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport sortTags from 'flarum/tags/utils/sortTags';\n\nexport default class DiscussionFields extends Component {\n    init() {\n        this.tags = app.store.all('tags');\n        this.selectedTags = [];\n\n        if (this.props.discussion) {\n            this.tags = this.tags.filter(tag => tag.canAddToDiscussion() || this.props.discussion.tags().indexOf(tag) !== -1);\n\n            this.selectedTags = this.props.discussion.tags();\n        } else {\n            this.tags = this.tags.filter(tag => tag.canStartDiscussion());\n        }\n\n        this.minPrimary = app.forum.attribute('minPrimaryTags');\n        this.maxPrimary = app.forum.attribute('maxPrimaryTags');\n        this.minSecondary = app.forum.attribute('minSecondaryTags');\n        this.maxSecondary = app.forum.attribute('maxSecondaryTags');\n\n        // If primary tags are disabled, don't offer them\n        if (this.maxPrimary <= 0) {\n            this.tags = this.tags.filter(tag => !tag.isPrimary());\n        }\n\n        // If secondary tags are disabled, don't offer them\n        if (this.maxSecondary <= 0) {\n            this.tags = this.tags.filter(tag => tag.isPrimary());\n        }\n\n        this.tags = sortTags(this.tags);\n    }\n\n    view() {\n        if (this.maxPrimary > 1 || this.maxSecondary > 1) {\n            return m('.Alert', app.translator.trans('raafirivero-mason.forum.tags.inadequate-settings'));\n        }\n\n        // We take the first child selected or if none, the first parent selected\n        // Of course this only works if a single tag or tag+parent is selected\n        // Multiple tags are not supported on this selector\n        const currentSelectedChild = this.selectedTags.length ? this.selectedTags.sort(tag => tag.parent() ? -1 : 1)[0].id() : null;\n\n        const required = this.fieldRequired();\n\n        return m('.Mason-Field.Form-group', {\n            className: app.forum.attribute('raafirivero.mason.labels-as-placeholders') ? 'Mason-Field--label-as-placeholder' : '',\n        }, [\n            m('label', this.fieldLabel()),\n            m('span.Select', [\n                m('select.Select-input.FormControl', {\n                    onchange: m.withAttr('value', id => {\n                        this.selectedTags = [];\n\n                        if (id !== 'none') {\n                            this.selectedTags.push(this.tags.find(tag => tag.id() === id));\n\n                            const parent = this.selectedTags[0].parent();\n                            if (parent) {\n                                this.selectedTags.push(parent);\n                            }\n                        }\n\n                        this.props.onchange(this.selectedTags);\n                    }),\n                }, [\n                    m('option', {\n                        value: 'none',\n                        selected: this.selectedTags.length === 0,\n                        disabled: required,\n                        hidden: this.placeholderHidden(),\n                    }, this.selectPlaceholder()),\n                    this.tags.map(\n                        tag => {\n                            const parent = tag.parent();\n\n                            return m('option', {\n                                value: tag.id(),\n                                selected: tag.id() === currentSelectedChild,\n                            }, (parent ? parent.name() + ' | ' : '') + tag.name());\n                        }\n                    ),\n                ]),\n                icon('fas fa-caret-down', {className: 'Select-caret'}),\n            ]),\n        ]);\n    }\n\n    fieldRequired() {\n        return this.minPrimary > 0 || this.minSecondary > 0;\n    }\n\n    fieldLabel() {\n        let text = app.forum.attribute('raafirivero.mason.tags-field-name') || app.translator.trans('raafirivero-mason.forum.tags.tags-label');\n\n        if (this.fieldRequired()) {\n            text += ' *';\n        }\n\n        return text;\n    }\n\n    placeholderHidden() {\n        if (app.forum.attribute('raafirivero.mason.labels-as-placeholders')) {\n            return false;\n        }\n\n        return this.fieldRequired();\n    }\n\n    selectPlaceholder() {\n        let text = '';\n\n        if (app.forum.attribute('raafirivero.mason.labels-as-placeholders')) {\n            text += this.fieldLabel() + ' - ';\n        }\n\n        if (this.fieldRequired()) {\n            text += app.translator.trans('raafirivero-mason.forum.answers.choose-option');\n        } else {\n            text += app.translator.trans('raafirivero-mason.forum.answers.no-option-selected');\n        }\n\n        return text;\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Component from 'flarum/Component';\n\nexport default class FieldEditText extends Component {\n    init() {\n        this.field = this.props.field;\n        this.answers = this.props.answers;\n        this.onchange = this.props.onchange;\n\n        this.content = '';\n\n        const answersForThisField = this.answers.filter(answer => {\n            // Temporary store entries seem to turn into undefined after saving\n            if (typeof answer === 'undefined') {\n                return false;\n            }\n\n            return answer.field().id() === this.field.id();\n        });\n\n        if (answersForThisField.length) {\n            // For now we only support a single custom answer\n            this.content = answersForThisField[0].content();\n        }\n    }\n\n    view() {\n        return m('input.FormControl', {\n            required: this.field.required(),\n            value: this.content,\n            oninput: m.withAttr('value', value => {\n                this.content = value;\n\n                if (this.content === '') {\n                    this.onchange([]);\n                } else {\n                    const answer = app.store.createRecord('raafirivero-mason-answer', {\n                        attributes: {\n                            content: this.content,\n                        },\n                        relationships: {\n                            field: {\n                                data: Model.getIdentifier(this.field),\n                            },\n                        },\n                    });\n\n                    this.onchange([answer]);\n                }\n            }),\n            placeholder: this.fieldPlaceholder(),\n        });\n    }\n\n    fieldPlaceholder() {\n        if (app.forum.attribute('raafirivero.mason.labels-as-placeholders')) {\n            return this.field.name() + (this.field.required() ? ' *' : '');\n        }\n\n        return '';\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport chunkArray from './../helpers/chunkArray';\n\nexport default class FieldGrid extends Component {\n    view() {\n        return m('.Mason-Grid-Wrapper', m('.Mason-Grid', chunkArray(this.props.items, app.forum.attribute('raafirivero.mason.column-count')).map(\n            row => m('.Mason-Row', row.map(\n                item => m('.Mason-Column', item)\n            ))\n        )));\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport ItemList from 'flarum/utils/ItemList';\nimport Component from 'flarum/Component';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\nimport FieldEditDropdown from './FieldEditDropdown';\nimport FieldEditText from './FieldEditText';\nimport FieldEditTags from './FieldEditTags';\nimport FieldGrid from './FieldGrid';\n\nexport default class FieldsEditor extends Component {\n    init() {\n        this.fields = sortByAttribute(app.store.all('raafirivero-mason-field'));\n\n        // Index to quickly do a reverse lookup from answer to field\n        this.answerToFieldIndex = [];\n        this.fields.forEach(\n            field => {\n                field.suggested_answers().forEach(\n                    answer => {\n                        this.answerToFieldIndex[answer.id()] = field.id();\n                    }\n                );\n            }\n        );\n    }\n\n    view() {\n        return m('form.Mason-Fields.Mason-Fields--editor', {\n            onsubmit(event) {\n                event.preventDefault();\n            },\n        }, [\n            this.headItems().toArray(),\n            FieldGrid.component({\n                items: this.fieldItems().toArray(),\n            }),\n        ]);\n    }\n\n    updateSelection(field, fieldAnswers) {\n        // Keep only answers to other fields\n        let answers = this.props.answers.filter(\n            answer => {\n                const reverseFieldLookup = this.answerToFieldIndex[answer.id()];\n\n                // If the answer is not in the reverse lookup table it's probably a non-suggested (user) answer\n                // In that case the field should be linked in the relationship\n                if (typeof reverseFieldLookup === 'undefined') {\n                    return answer.field().id() !== field.id();\n                }\n\n                return reverseFieldLookup !== field.id();\n            }\n        );\n\n        answers = answers.concat(fieldAnswers);\n\n        this.props.onchange(answers);\n    }\n\n    headItems() {\n        const items = new ItemList();\n\n        if (app.forum.attribute('raafirivero.mason.fields-section-title')) {\n            items.add('title', m('h5.Mason-Field--title', app.forum.attribute('raafirivero.mason.fields-section-title')));\n        }\n\n        return items;\n    }\n\n    fieldItems() {\n        const items = new ItemList();\n\n        if (app.forum.attribute('raafirivero.mason.tags-as-fields')) {\n            items.add('tags', FieldEditTags.component({\n                discussion: this.props.discussion,\n                onchange: tags => {\n                    if (this.props.ontagchange) {\n                        this.props.ontagchange(tags);\n                    }\n                },\n            }));\n        }\n\n        this.fields.forEach(field => {\n            const inputAttrs = {\n                field,\n                answers: this.props.answers,\n                onchange: fieldAnswers => {\n                    // Every input component calls \"onchange\" with a list of answers from the store\n                    this.updateSelection(field, fieldAnswers);\n                },\n            };\n            let input = null;\n\n            if (field.user_values_allowed()) {\n                input = FieldEditText.component(inputAttrs);\n            } else {\n                input = FieldEditDropdown.component(inputAttrs);\n            }\n\n            items.add('field-' + field.id(), m('.Mason-Field.Form-group', {\n                className: app.forum.attribute('raafirivero.mason.labels-as-placeholders') ? 'Mason-Field--label-as-placeholder' : '',\n            }, [\n                m('label', [\n                    (field.icon() ? [icon(field.icon()), ' '] : null),\n                    field.name(),\n                    (field.required() ? ' *' : null),\n                ]),\n                input,\n                (field.description() ? m('.helpText', field.description()) : null),\n            ]));\n        });\n\n        return items;\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport ItemList from 'flarum/utils/ItemList';\nimport Component from 'flarum/Component';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\nimport FieldEditDropdown from './FieldEditDropdown';\nimport FieldEditText from './FieldEditText';\nimport FieldEditTags from './FieldEditTags';\nimport FieldGrid from './FieldGrid';\n\nexport default class FieldsEditorByTags extends Component {\n    init(bytags) {\n        //let allFields = sortByAttribute(app.store.all('raafirivero-mason-field'));\n        this.fields = sortByAttribute(app.store.all('raafirivero-mason-field'));\n        let smallList = [];\n        let tagslist = bytags;\n\n        // console.log(\"init\");\n\n        if (tagslist) {\n            // double loop here. gotta find a simpler way\n            for ( let i = 0; i < tagslist.length ; i++ ) {\n                for ( let j = 0; j < allFields.length ; j++ ) {\n                    if (tagslist[i] == allFields[j].data.attributes.name) {\n                        smallList.push(allFields[j]);\n                    }\n                }\n            }\n        }\n\n        //this.fields = smallList;\n\n        //console.log(this.fields);\n\n        // Index to quickly do a reverse lookup from answer to field\n        this.answerToFieldIndex = [];\n        this.fields.forEach(\n            field => {\n                field.suggested_answers().forEach(\n                    answer => {\n                        this.answerToFieldIndex[answer.id()] = field.id();\n                    }\n                );\n            }\n        );\n    }\n\n    view() {\n        return m('form.Mason-Fields.Mason-Fields--editor', {\n            onsubmit(event) {\n                event.preventDefault();\n            },\n        }, [\n            this.headItems().toArray(),\n            FieldGrid.component({\n                items: this.fieldItems().toArray(),\n            }),\n        ]);\n    }\n\n    updateSelection(field, fieldAnswers) {\n        // Keep only answers to other fields\n        let answers = this.props.answers.filter(\n            answer => {\n                const reverseFieldLookup = this.answerToFieldIndex[answer.id()];\n\n                // If the answer is not in the reverse lookup table it's probably a non-suggested (user) answer\n                // In that case the field should be linked in the relationship\n                if (typeof reverseFieldLookup === 'undefined') {\n                    return answer.field().id() !== field.id();\n                }\n\n                return reverseFieldLookup !== field.id();\n            }\n        );\n\n        answers = answers.concat(fieldAnswers);\n\n        this.props.onchange(answers);\n    }\n\n    headItems() {\n        const items = new ItemList();\n\n        if (app.forum.attribute('raafirivero.mason.fields-section-title')) {\n            items.add('title', m('h5.Mason-Field--title', app.forum.attribute('raafirivero.mason.fields-section-title')));\n        }\n\n        return items;\n    }\n\n    fieldItems() {\n        const items = new ItemList();\n\n        // taking this feature off beacuse changing tags will affect which fields show up\n\n        // if (app.forum.attribute('raafirivero.mason.tags-as-fields')) {\n        //     items.add('tags', FieldEditTags.component({\n        //         discussion: this.props.discussion,\n        //         onchange: tags => {\n        //             if (this.props.ontagchange) {\n        //                 this.props.ontagchange(tags);\n        //             }\n        //         },\n        //     }));\n        // }\n\n        this.fields.forEach(field => {\n            const inputAttrs = {\n                field,\n                bytags: this.props.bytags,\n                answers: this.props.answers,\n                onchange: fieldAnswers => {\n                    // Every input component calls \"onchange\" with a list of answers from the store\n                    this.updateSelection(field, fieldAnswers);\n                },\n            };\n            let input = null;\n\n            if (field.user_values_allowed()) {\n                input = FieldEditText.component(inputAttrs);\n            } else {\n                input = FieldEditDropdown.component(inputAttrs);\n            }\n\n            // if this field is in the list, then add it to items, otherwise, nada.\n            this.props.bytags.forEach( tag => {\n                \n                if ( tag == field.data.attributes.name ) {\n\n                    items.add('field-' + field.id(), m('.Mason-Field.Form-group', {\n                        className: app.forum.attribute('raafirivero.mason.labels-as-placeholders') ? 'Mason-Field--label-as-placeholder' : '',\n                    }, [\n                        m('label', [\n                            (field.icon() ? [icon(field.icon()), ' '] : null),\n                            field.name(),\n                            (field.required() ? ' *' : null),\n                        ]),\n                        input,\n                        (field.description() ? m('.helpText', field.description()) : null),\n                    ]));\n\n                }\n\n            })\n        });\n\n        return items;\n    }\n}\n","import app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport FieldsEditor from './FieldsEditor';\n\nexport default class FieldsEditorModal extends Modal {\n    init() {\n        super.init();\n\n        this.answers = this.props.discussion.raafiriveroMasonAnswers();\n        this.dirty = false;\n        this.processing = false;\n\n        // Stays null if the feature is not used\n        this.tags = null;\n    }\n\n    title() {\n        return app.translator.trans('raafirivero-mason.forum.answers-modal.edit-title', {\n            title: m('em', this.props.discussion.title()),\n        });\n    }\n\n    content() {\n        return [\n            m('.Modal-body', FieldsEditor.component({\n                discussion: this.props.discussion, // Only for the tags feature\n                answers: this.answers,\n                onchange: this.answersChanged.bind(this),\n                ontagchange: tags => {\n                    this.tags = tags;\n                    this.dirty = true;\n                },\n            })),\n            m('.Modal-footer', [\n                Button.component({\n                    className: 'Button Button--primary',\n                    children: app.translator.trans('raafirivero-mason.forum.answers-modal.save'),\n                    loading: this.processing,\n                    disabled: !this.dirty,\n                    onclick: this.saveAnswers.bind(this),\n                }),\n            ]),\n        ];\n    }\n\n    answersChanged(answers) {\n        this.answers = answers;\n        this.dirty = true;\n    }\n\n    saveAnswers() {\n        this.processing = true;\n\n        let relationships = {\n            raafiriveroMasonAnswers: this.answers,\n        };\n\n        // If tag edit is enabled, take care of them here as well\n        if (this.tags !== null) {\n            relationships.tags = this.tags;\n        }\n\n        this.props.discussion.save({\n            relationships,\n        }).then(() => {\n            this.processing = false;\n            app.modal.close();\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n            throw err;\n        });\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport ItemList from 'flarum/utils/ItemList';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport FieldsEditorModal from './FieldsEditorModal';\nimport FieldGrid from './FieldGrid';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\n\nexport default class FieldsViewer extends Component {\n    init() {\n        this.fields = sortByAttribute(app.store.all('raafirivero-mason-field'));\n        this.discussion = this.props.discussion;\n    }\n\n    view() {\n        const head = this.headItems().toArray();\n        const fields = this.fieldsItems().toArray();\n\n        // If all fields are hidden\n        // And either no controls are shown or the setting hides them\n        // We don't show the viewer\n        if (!fields.length && (!head.length || app.forum.attribute('raafirivero.mason.hide-empty-fields-section'))) {\n            // We need to return an actual dom element or Flarum does not like it\n            return m('div');\n        }\n\n        return m('.Mason-Fields.Mason-Fields--viewer', [\n            head,\n            FieldGrid.component({\n                items: fields,\n            }),\n        ]);\n    }\n\n    headItems() {\n        const items = new ItemList();\n\n        if (this.discussion.canUpdateRaafiRiveroMasonAnswers()) {\n            items.add('edit', Button.component({\n                className: 'Button Mason-Fields--edit',\n                children: app.translator.trans('raafirivero-mason.forum.discussion-controls.edit-answers'),\n                icon: 'fas fa-pen',\n                onclick: () => app.modal.show(new FieldsEditorModal({\n                    discussion: this.discussion,\n                })),\n            }));\n        }\n\n        if (app.forum.attribute('raafirivero.mason.fields-section-title')) {\n            items.add('title', m('h5.Mason-Field--title', app.forum.attribute('raafirivero.mason.fields-section-title')));\n        }\n\n        return items;\n    }\n\n    fieldsItems() {\n        const items = new ItemList();\n\n        this.fields.forEach(field => {\n            // Discussion answers to this field\n            const answers = sortByAttribute(this.discussion.raafiriveroMasonAnswers().filter(answer => {\n                // It's necessary to compare the field() relationship\n                // Because field.suggested_answers() won't contain new and user answers\n                return answer.field().id() === field.id();\n            }));\n\n            let answer_list = answers.map(answer => m('span.Mason-Inline-Answer', answer.content()));\n\n            if (answers.length === 0) {\n                if (field.show_when_empty()) {\n                    answer_list.push(m('em.Mason-Inline-Answer', app.translator.trans('raafirivero-mason.forum.post-answers.no-answer')));\n                } else {\n                    // If the field has no answer and the setting is off we don't show it\n                    return;\n                }\n            }\n\n            items.add('field-' + field.id(), m('.Mason-Field.Form-group', [\n                m('label', [\n                    (field.icon() ? [icon(field.icon()), ' '] : null),\n                    field.name(),\n                ]),\n                m('.FormControl.Mason-Inline-Answers', answer_list),\n            ]));\n        });\n\n        return items;\n    }\n}\n","/**\n * Split an array into multiple arrays of a given size\n * Useful for grid layouts\n * @see https://stackoverflow.com/a/10456644/3133038\n * @param {Array} items\n * @param {number} itemsPerChunk\n * @returns {Array}\n */\nexport default function (items, itemsPerChunk) {\n    let R = [];\n    for (let i = 0; i < items.length; i += itemsPerChunk) {\n        R.push(items.slice(i, i + itemsPerChunk));\n    }\n    return R;\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Discussion from 'flarum/models/Discussion';\nimport Forum from 'flarum/models/Forum';\nimport Answer from './../lib/models/Answer';\nimport Field from './../lib/models/Field';\nimport ByTag from './../lib/models/ByTag';\nimport addComposerFields from './addComposerFields';\nimport addFieldUpdateControl from './addFieldUpdateControl';\nimport addFieldsOnDiscussionHero from './addFieldsOnDiscussionHero';\nimport addFieldsOnDiscussionPost from './addFieldsOnDiscussionPost';\nimport patchModelIdentifier from \"./patchModelIdentifier\";\n\napp.initializers.add('raafirivero-mason', app => {\n    app.store.models['raafirivero-mason-field'] = Field;\n    app.store.models['raafirivero-mason-answer'] = Answer;\n    app.store.models['raafirivero-mason-bytag'] = ByTag;\n\n    Discussion.prototype.raafiriveroMasonAnswers = Model.hasMany('raafiriveroMasonAnswers');\n    Discussion.prototype.canSeeRaafiRiveroMasonAnswers = Model.attribute('canSeeRaafiRiveroMasonAnswers');\n    Discussion.prototype.canUpdateRaafiRiveroMasonAnswers = Model.attribute('canUpdateRaafiRiveroMasonAnswers');\n    Forum.prototype.canFillRaafiRiveroMasonFields = Model.attribute('canFillRaafiRiveroMasonFields');\n\n    addComposerFields();\n    addFieldsOnDiscussionHero();\n    addFieldsOnDiscussionPost();\n    addFieldUpdateControl();\n    patchModelIdentifier();\n});\n","import {override} from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport Answer from './../lib/models/Answer';\n\nexport default function () {\n    override(Model, 'getIdentifier', function (original, model) {\n        // For Answers that don't yet exist, we include the content and the field relationship when calling the API\n        // That way they can be created server-side without making individual API requests for each answer\n        if (model instanceof Answer && !model.exists) {\n            return {\n                type: model.data.type,\n                attributes: {\n                    content: model.data.attributes.content,\n                },\n                relationships: {\n                    field: {\n                        data: Model.getIdentifier(model.data.relationships.field),\n                    },\n                },\n            };\n        }\n\n        // Default behaviour\n        return original(model);\n    })\n}\n","export default function (items, attr = 'sort') {\n    return items.sort(\n        (a, b) => a[attr]() - b[attr]()\n    );\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Answer extends mixin(Model, {\n    content: Model.attribute('content'),\n    is_suggested: Model.attribute('is_suggested'),\n    sort: Model.attribute('sort'),\n    field: Model.hasOne('field'),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/raafirivero/mason/answers' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class ByTag extends mixin(Model, {\n    tag_name: Model.attribute('tag_name'),\n    tag_id: Model.attribute('tag_id'),\n    allowed_field: Model.attribute('allowed_field'),\n    switch: Model.attribute('switch'),\n    \n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/raafirivero/mason/bytag' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport computed from 'flarum/utils/computed';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    min_answers_count: Model.attribute('min_answers_count'),\n    max_answers_count: Model.attribute('max_answers_count'),\n    show_when_empty: Model.attribute('show_when_empty'),\n    user_values_allowed: Model.attribute('user_values_allowed'),\n    validation: Model.attribute('validation'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    all_answers: Model.hasMany('all_answers'),\n    suggested_answers: Model.hasMany('suggested_answers'),\n    required: computed('min_answers_count', min_answers_count => min_answers_count > 0),\n    multiple: computed('max_answers_count', max_answers_count => max_answers_count > 1),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/raafirivero/mason/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/Composer'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['models/Forum'];","module.exports = flarum.core.compat['tags/components/TagDiscussionModal'];","module.exports = flarum.core.compat['tags/utils/sortTags'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['utils/mixin'];"],"sourceRoot":""}